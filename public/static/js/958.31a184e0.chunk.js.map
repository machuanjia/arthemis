{"version":3,"sources":["views/graph/GraphCollection.tsx","views/graph/index.tsx","apis/scrum.ts","apis/tasks.ts","apis/project.ts","apis/graph.ts","apis/index.ts","components/Mixin/index.tsx"],"names":["GraphCollection","props","state","loading","console","log","this","entity","e","preventDefault","callback","isVisible","isRefresh","values","labelCol","span","wrapperCol","onFinish","handleSubmit","bind","initialValues","name","Item","label","rules","required","message","placeholder","type","htmlType","className","i18n","t","onClick","cancel","Component","GraphView","fetchAction","getGraphs","createAction","createGraph","getDetailAction","getGraphDetail","updateAction","updateGraph","deleteAction","deleteGraph","record","history","push","_id","editEntity","deleteEntity","data","pagination","getRowKey","columns","title","dataIndex","key","render","text","width","settingAction","SettingOutlined","placement","EditOutlined","editAction","DeleteOutlined","rowKey","bordered","dataSource","searchAction","isCollectionVisible","openCollection","closeCollection","collectionCallBack","ContentLayout","onKeyDown","suffix","SearchOutlined","icon","PlusOutlined","getTable","visible","MODAL_SIZE","md","destroyOnClose","footer","onCancel","listMixin","getProjectScrums","params","request","url","method","createScrum","updateScrum","createTask","updateTask","deleteTask","getTaskDetail","getTasks","sortTasks","summaryTask","getSummary","getProjects","createProject","getProjectDetail","id","updateProject","deleteProject","ComposedComponent","instance","beforeFetch","afterFtech","searchText","showSizeChanger","onShowSizeChange","onChange","pageChange","pageSizeOptions","hideOnSinglePage","pageIndex","pageSize","total","getList","code","keyCode","value","target","current","page","setState","then","init","pi","ps","keyword","res","err","error","index","ref","getInstance"],"mappings":"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","file":"static/js/958.31a184e0.chunk.js","sourcesContent":["/*\n * @Author: D.Y\n * @Date: 2021-05-06 16:14:44\n * @LastEditTime: 2021-05-06 16:46:04\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/views/graph/GraphCollection.tsx\n * @Description: \n */\nimport React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport i18n from 'i18next';\n\ntype Props = {\n  callback: ({ isVisible, isRefresh }) => unknown;\n  form: any;\n  entity: any;\n};\ntype State = {\n  loading: boolean;\n};\n\nexport default class GraphCollection extends Component<\n  Props,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n  }\n  componentDidMount() {\n    console.log(this.props.entity);\n  }\n  cancel(e) {\n    e.preventDefault();\n    this.props.callback({\n      isVisible: false,\n      isRefresh: false,\n    });\n  }\n  handleSubmit(values) {\n    this.props.callback({\n      isVisible: false,\n      isRefresh: true,\n      values\n    } as any);\n  }\n \n  render() {\n    const { entity } = this.props\n    return (\n      <Form\n        labelCol={{ span: 24 }}\n        wrapperCol={{ span: 24 }}\n        onFinish={this.handleSubmit.bind(this)}\n        initialValues={{\n          name: entity ? entity.name : '',\n        }}\n      >\n        <Form.Item\n          label=\"名称\"\n          name=\"name\"\n          rules={[{ required: true, message: '请输入名称' }]}\n        >\n          <Input placeholder=\"请输入名称\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"m-r-12\">\n            {i18n.t('action.save')}\n          </Button>\n          <Button onClick={this.cancel.bind(this)}> {i18n.t('action.cancel')}</Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Table, Input, Button, Tooltip, Modal } from 'antd';\n\nimport GraphCollection from './GraphCollection';\nimport { getGraphs, getGraphDetail, updateGraph, deleteGraph, createGraph } from '@apis/index';\nimport type { IListMixin } from '@interfaces/mixin';\nimport {\n  SettingOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  PlusOutlined,\n} from '@ant-design/icons';\nimport i18n from 'i18next';\nimport ContentLayoutComponent from '@components/ContentLayout';\nimport { MODAL_SIZE } from '@constants/modal';\nimport { listMixin } from '@components/Mixin';\n\ntype State = unknown;\n\nclass GraphView extends Component<IListMixin, State> {\n  init() {\n    return {\n      fetchAction: getGraphs,\n      createAction: createGraph,\n      getDetailAction: getGraphDetail,\n      updateAction: updateGraph,\n      deleteAction: deleteGraph,\n    };\n  }\n\n  settingAction(record){\n    // @ts-ignore\n    this.props.history.push(`/graphs/${record._id}`)\n  }\n\n  editAction(record) {\n    this.props.editEntity(record._id);\n  }\n\n  deleteAction(record) {\n    this.props.deleteEntity(record._id);\n  }\n\n  getTable() {\n    const { data, loading, pagination, getRowKey } = this.props;\n    const columns = [\n      {\n        title: i18n.t('list.name'),\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => text,\n      },\n      {\n        title: i18n.t('list.operation'),\n        key: 'action',\n        width: 200,\n        render: (text, record) => (\n          <span>\n            <span className=\"m-l-12 m-r-12 icon-actions\" onClick={this.settingAction.bind(this, record)}>\n              <SettingOutlined /> {i18n.t('action.setting')}\n            </span>\n            <span className=\"m-l-12 m-r-12 icon-actions\">\n              <Tooltip placement=\"top\" title={i18n.t('action.edit')}>\n                <EditOutlined onClick={this.editAction.bind(this, record)} />\n              </Tooltip>\n            </span>\n            <span className=\"m-l-12 m-r-12 icon-actions\">\n              <Tooltip placement=\"top\" title={i18n.t('action.delete')}>\n                <DeleteOutlined onClick={this.deleteAction.bind(this, record)} />\n              </Tooltip>\n            </span>\n          </span>\n        ),\n      },\n    ];\n\n    return (\n      <Table\n        rowKey={getRowKey}\n        pagination={pagination}\n        loading={loading}\n        bordered={true}\n        columns={columns}\n        dataSource={data}\n      />\n    );\n  }\n\n  render() {\n    const {\n      searchAction,\n      isCollectionVisible,\n      openCollection,\n      closeCollection,\n      collectionCallBack,\n      entity,\n    } = this.props;\n    return (\n      <ContentLayoutComponent>\n        <Fragment key=\"left\">\n          <Input\n            className=\"search\"\n            onKeyDown={searchAction}\n            suffix={<SearchOutlined />}\n            placeholder={i18n.t('list.search')}\n          />\n        </Fragment>\n        <Fragment key=\"actions\">\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            className={`${'action-btn'}`}\n            onClick={openCollection}\n          >\n            {i18n.t('action.create')}\n          </Button>\n        </Fragment>\n        <Fragment key=\"main\">\n          {this.getTable()}\n          <Modal\n            title={i18n.t('action.create')}\n            visible={isCollectionVisible}\n            width={MODAL_SIZE.md}\n            destroyOnClose={true}\n            footer={false}\n            onCancel={closeCollection}\n          >\n            {\n              // @ts-ignore\n              <GraphCollection entity={entity} callback={collectionCallBack} />\n            }\n          </Modal>\n        </Fragment>\n      </ContentLayoutComponent>\n    );\n  }\n}\nexport default listMixin(GraphView);\n","/*\n * @Author: D.Y\n * @Date: 2021-04-20 19:17:58\n * @LastEditTime: 2021-04-24 09:36:00\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/scrum.ts\n * @Description:\n */\nimport type { IScrum } from '@interfaces/scrum'\nimport request from '@utils/request'\n\nexport const getProjectScrums = (params = {}) => {\n  return request({\n    url: '/scrums',\n    method: 'get',\n    params,\n  })\n}\n\nexport const createScrum = (data: IScrum) => {\n  return request({\n    url: '/scrums',\n    method: 'post',\n    data,\n  })\n}\n\nexport const updateScrum = (_id, data: IScrum) => {\n  return request({\n    url: `/scrums/${_id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const getScrumDetail = (_id, params = {}) => {\n  return request({\n    url: `/scrums/${_id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const deleteScrum = (_id) => {\n  return request({\n    url: `/scrums/${_id}`,\n    method: 'delete',\n  })\n}\n","/*\n * @Author: D.Y\n * @Date: 2021-04-14 19:16:26\n * @LastEditTime: 2021-04-21 10:02:26\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/tasks.ts\n * @Description:\n */\nimport type { Task } from '@interfaces/task'\nimport request from '@utils/request'\n\nexport const createTask = (data: Task) => {\n  return request({\n    url: '/tasks',\n    method: 'post',\n    data,\n  })\n}\n\nexport const updateTask = (_id: string, data: Task) => {\n  return request({\n    url: `/tasks/${_id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const deleteTask = (_id: string) => {\n  return request({\n    url: `/tasks/${_id}`,\n    method: 'delete',\n  })\n}\n\nexport const getTaskDetail = (_id: string, params = {}) => {\n  return request({\n    url: `/tasks/${_id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const getTasks = (params = {}) => {\n  return request({\n    url: '/tasks',\n    method: 'get',\n    params,\n  })\n}\n\nexport const sortTasks = (\n  _id: string,\n  data: {\n    fromId: string\n    toId: string\n    oldIndex: number\n    newIndex: number\n  },\n) => {\n  return request({\n    url: `/tasks/${_id}/sort`,\n    method: 'post',\n    data,\n  })\n}\n\nexport const summaryTask = (data: { content: string; dateNumber: string }) => {\n  return request({\n    url: '/task-summary',\n    method: 'post',\n    data,\n  })\n}\nexport const getSummary = (params = {}) => {\n  return request({\n    url: '/task-summary',\n    method: 'get',\n    params,\n  })\n}\n","/*\n * @Author: D.Y\n * @Date: 2021-02-04 15:27:20\n * @LastEditTime: 2021-04-20 15:54:24\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/project.ts\n * @Description: \n */\n\nimport type { IProject } from '@interfaces/project'\nimport request from '@utils/request'\n\n\nexport const getProjects = (params = {}) => {\n  return request({\n    url: '/projects',\n    method: 'get',\n    params,\n  })\n}\n\nexport const createProject = (data: IProject) => {\n  return request({\n    url: '/projects',\n    method: 'post',\n    data,\n  })\n}\n\nexport const getProjectDetail = (id: string, params = {}) => {\n  return request({\n    url: `/projects/${id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const updateProject = (id: string, data: IProject) => {\n  return request({\n    url: `/projects/${id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const deleteProject = (id: string) => {\n  return request({\n    url: `/projects/${id}`,\n    method: 'delete',\n  })\n}\n","/*\n * @Author: D.Y\n * @Date: 2021-05-06 16:15:09\n * @LastEditTime: 2021-05-06 16:15:33\n * @LastEditors: D.Y\n * @FilePath: /arthemis-client/src/apis/Graph.ts\n * @Description: \n */\nimport request from '@utils/request'\n\nexport const getGraphs = (params = {}) => {\n  return request({\n    url: 'graphs',\n    method: 'get',\n    params,\n  })\n}\n\nexport const createGraph = (data) => {\n  return request({\n    url: 'graphs',\n    method: 'post',\n    data,\n  })\n}\n\nexport const getGraphDetail = (id: string, params = {}) => {\n  return request({\n    url: `graphs/${id}`,\n    method: 'get',\n    params,\n  })\n}\n\nexport const updateGraph = (id: string, data) => {\n  return request({\n    url: `graphs/${id}`,\n    method: 'put',\n    data,\n  })\n}\n\nexport const deleteGraph = (id: string) => {\n  return request({\n    url: `graphs/${id}`,\n    method: 'delete',\n  })\n}\n","export * from './tasks'\nexport * from './users'\nexport * from './project'\nexport * from './scrum'\nexport * from './graph'\n","import React, { Component } from 'react'\n\ntype IListState = {\n  data: Record<string, unknown>[]\n  loading: boolean\n  isCollectionVisible: boolean\n  entity: Record<string, unknown>\n}\nexport const listMixin = (ComposedComponent) =>\n  class extends Component<any, IListState> {\n    private instance = null\n    private fetchAction = null\n    private getDetailAction = null\n    private createAction = null\n    private updateAction = null\n    private deleteAction = null\n\n    private beforeFetch = null\n    private afterFtech = null\n    private searchText = ''\n    private pagination = {\n      showSizeChanger: true,\n      onShowSizeChange: this.onShowSizeChange.bind(this),\n      onChange: this.pageChange.bind(this),\n      pageSizeOptions: ['10', '20', '30', '40', '50', '60', '100'],\n      hideOnSinglePage: false,\n      pageIndex: 1,\n      pageSize: 20,\n      total: 0,\n    }\n    constructor(props) {\n      super(props)\n      this.state = {\n        data: [],\n        loading: false,\n        isCollectionVisible: false,\n        entity: null,\n      }\n    }\n\n    componentDidMount() {\n      this.beforeFetch()\n      this.getList()\n      this.afterFtech()\n    }\n\n    searchAction(e) {\n      const code = e.keyCode\n      const { value } = e.target\n      if (code === 13) {\n        this.searchText = value\n        this.pagination.pageIndex = 1\n        this.pagination.pageSize = 20\n        this.getList()\n      }\n    }\n\n    onShowSizeChange(current, pageSize) {\n      this.pagination.pageSize = pageSize\n      this.getList()\n    }\n\n    pageChange(page) {\n      this.pagination.pageIndex = page\n      this.getList()\n    }\n\n    openCollection() {\n      this.setState({\n        isCollectionVisible: true,\n      })\n    }\n\n    closeCollection() {\n      this.setState({\n        isCollectionVisible: false,\n      })\n    }\n\n    collectionCallBack({ isVisible, isRefresh, values = '' }) {\n      isVisible && this.openCollection()\n      !isVisible && this.closeCollection()\n      if (values) {\n        if (!this.state.entity) {\n          // 新建\n          this.createAction(values).then(() => {\n            this.pagination.pageIndex = 1\n            this.getList()\n          })\n        } else {\n          // 修改\n          this.updateAction(this.state.entity._id, values).then(() => {\n            this.pagination.pageIndex = 1\n            this.getList()\n          })\n        }\n      } else {\n        isRefresh && this.getList()\n      }\n    }\n\n    getInstance(instance) {\n      if (instance) {\n        this.instance = instance\n        const {\n          fetchAction = () => {},\n          getDetailAction = () => {},\n          createAction = () => {},\n          updateAction = () => {},\n          deleteAction = () => {},\n          beforeFetch = () => {},\n          afterFtech = () => {},\n        } = this.instance.init()\n        this.fetchAction = fetchAction\n        this.getDetailAction = getDetailAction\n        this.createAction = createAction\n        this.updateAction = updateAction\n        this.deleteAction = deleteAction\n        this.beforeFetch = beforeFetch\n        this.afterFtech = afterFtech\n      }\n    }\n\n    getList() {\n      this.setState({\n        loading: true,\n      })\n      this.fetchAction({\n        pi: this.pagination.pageIndex - 1,\n        ps: this.pagination.pageSize,\n        keyword: this.searchText,\n      }).then((res) => {\n        const { page, total, data } = res\n        this.pagination.total = total\n        this.pagination.pageIndex = page\n        this.setState({\n          loading: false,\n          data,\n        })\n      })\n    }\n\n    editEntity(id: string) {\n      this.getDetailAction(id).then(\n        (data) => {\n          this.setState({\n            entity: data,\n            isCollectionVisible: true,\n          })\n        },\n        (err) => {\n          console.log(err)\n        },\n      )\n    }\n\n    deleteEntity(id: string) {\n      this.deleteAction(id).then(\n        () => {\n          this.pagination.pageIndex = 1\n          this.getList()\n        },\n        (error) => {\n          console.log(error)\n        },\n      )\n    }\n\n    getRowKey(record, index) {\n      return record.id || record._id || index\n    }\n\n    render() {\n      const { loading, data, isCollectionVisible, entity } = this.state\n      return (\n        <ComposedComponent\n          loading={loading}\n          data={data}\n          entity={entity}\n          pagination={this.pagination}\n          isCollectionVisible={isCollectionVisible}\n          searchAction={this.searchAction.bind(this)}\n          openCollection={this.openCollection.bind(this)}\n          closeCollection={this.closeCollection.bind(this)}\n          getRowKey={this.getRowKey.bind(this)}\n          getList={this.getList.bind(this)}\n          collectionCallBack={this.collectionCallBack.bind(this)}\n          editEntity={this.editEntity.bind(this)}\n          deleteEntity={this.deleteEntity.bind(this)}\n          {...this.props}\n          ref={this.getInstance.bind(this)}\n        />\n      )\n    }\n  }\n"],"sourceRoot":""}